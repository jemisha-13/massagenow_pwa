{"version":3,"file":"ng-otp-input.umd.js","sources":["ng:/ng-otp-input/lib/pipes/keys.pipe.ts","ng:/ng-otp-input/lib/models/config.ts","ng:/ng-otp-input/lib/components/ng-otp-input/ng-otp-input.component.ts","ng:/ng-otp-input/lib/directives/number-only.directive.ts","ng:/ng-otp-input/lib/ng-otp-input.module.ts"],"names":["Pipe","EventEmitter","FormGroup","FormControl","Component","Input","Output","Directive","ElementRef","Renderer2","NgModule","CommonModule","FormsModule","ReactiveFormsModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAgD,QAEhD;AACc,SAMb;AACD;AAAY;AAA4B;AAAuB;AAAY,QAJzE,4BAAS;AAAO;AACR;AACP;AAEM,QAJP,UAAU,KAAU;AAAI,YACtB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AAC7B,SAAG;oDANFA,SAAI,SAAC;gBACJ,IAAI,EAAE,MAAM,sBACb;;;;;;gDACY;AAAC,QAId,eAAC;AACA,KARD;AAAK;AAAC;AACA;AAEoB;AAKiB;AAAQ,ICVnD;AACoB,QADpB;AAAoB,SAWnB;AACD,QADA,aAAC;AACA,KADA,IAAA;AACD;AAAiB;AAAyB,QAXtC,6BAAmC;AACvC;AAAyB,QAArB,iCAAuC;AAC3C;AAAyB,QAArB,+BAAyB;AAC7B;AACK,QADD,wBAAe;AACnB;AAAyB,QAArB,kCAA2B;AAC/B;AACA,QADI,4BAAoB;AACxB;AAAyB,QAArB,gCAAwB;AAC5B;AAAyB,QAArB,iCAA0B;AAC9B;AAAyB,QAArB,kCAA2B;AAC/B;AAAyB,QAArB,6BAAqB;AACzB;AACI;AAAC;AAAQ;AAAsC;AAA0I;ACZ7L;AAKQ,QAuBN,6BAAoB,QAAkB;AAAI,YAAtB,aAAQ,GAAR,QAAQ,CAAU;AAAC,YAV9B,WAAM,GAAW,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AAC1C;AACU,YAAE,kBAAa,GAAG,IAAIC,iBAAY,EAAU,CAAC;AACvD,YACE,kBAAa,GAAkB,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC/D,YAAE,iBAAY,GACV,IAAI,CAAC,MAAM,EAAE;AACjB,iBAAO,QAAQ,CAAC,EAAE,CAAC;AACnB,iBAAO,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxD,SAC4C;AAC5C;AACW;AACQ;AAAY,QAD7B,sCAAQ;AACR;AAAuB;AAAY,QADnC;AACD,YAAG,IAAI,CAAC,OAAO,GAAG,IAAIC,eAAS,CAAC,EAAE,CAAC,CAAC;AACrC,YAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AAC7D,gBAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,IAAIC,iBAAW,EAAE,CAAC,CAAC;AAC7E,aAAK;AACL,YAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;AACzC,SACG;AACF;AAAY;AACL;AAAY,QADlB,6CAAe;AAAO;AACL;AAAY,QAD7B;AAAc,YAAd,iBAWC;AACH,YAXI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AACvC;AAAiC,oBAArB,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAK,IAAI,CAAC,YAAc,CAAC;AAC7E,gBAAM,IAAI,aAAa,EAAE;AACzB,oBAAQ,aAAa,CAAC,gBAAgB,CAAC,OAAO;AAAO;AAC3C;AAAmC;AAAwB,oBADrB,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;AAChF;AAAqC,wBAAvB,GAAG,GAAQ,aAAa,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAC7E,oBAAQ,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE;AAC9B,wBAAU,GAAG,CAAC,KAAK,EAAE,CAAC;AACtB,qBAAS;AACT,iBAAO;AACP,aAAK;AACL,SAAG;AACF;AAAY;AACZ;AACA;AAEkB;AACX,QALE,4CAAc;AAAO;AACZ;AAGL;AACA;AAAY,QALxB,UAAuB,GAAG;AAC5B,YAAI,OAAO,UAAQ,GAAK,CAAC;AACzB,SAAG;AAEH;AAAY;AACK;AACf;AAGM,QALN,yCAAW;AAAO;AACK;AAIrB;AAAY,QALd,UAAY,KAAK;AACnB,YAAI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACrC,SAAG;AAEH;AACW;AACI;AACf;AAEO,QAJL,0CAAY;AAAO;AACI;AAGpB;AAAY,QAJf,UAAa,KAAK;AACpB,YAAI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACrC,SAAG;AAEH;AAAY;AACH;AACU;AAAY,QAF7B,iDAAmB;AAAO;AAEhB;AACZ;AAAY,QAHV,UAAoB,KAAK;AAC3B,YAAI,QACE,KAAK,CAAC,GAAG,KAAK,WAAW;AAC/B,gBAAM,KAAK,CAAC,GAAG,KAAK,QAAQ;AAC5B,gBAAM,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;AAC9B,gBAAM,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,EACzB;AACN,SAAG;AAEH;AAAY;AACL;AAAiC;AAC1B;AAAY,QAFxB,uCAAS;AAAO;AACL;AAAiC;AAC1B;AAAY,QAF9B,UAAU,KAAK,EAAE,UAAU;AAC7B;AAA6B,gBAAnB,GAAG,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ;AAC/C;AACQ,YAAJ,OAAO,GAAG,IAAI,UAAU,GAAG,IAAI,GAAG,KAAK,CAAC;AAC5C,SAAG;AACF;AAAY;AACO;AACnB;AAAY,QAFX,uCAAS;AAAO;AACO;AACnB;AAAY,QAFhB,UAAU,MAAM;AAClB;AAA6B,gBAArB,OAAO,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAC,EAAE,CAAC;AACxC,YAAG,IAAI,OAAO,EAAE;AAChB,gBAAG,OAAO,KAAK,CAAC;AACjB,aAAK;AACL,SAAG;AAEH;AAAY;AACD;AAA+B;AACxC;AAAY,QAFZ,qCAAO;AAAO;AACD;AAA+B;AACxC;AAAY,QAFhB,UAAQ,MAAM,EAAE,QAAQ;AAC1B;AAA6B,gBAAnB,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,UAAO,QAAQ,GAAG,CAAC,CAAE,CAAC;AAC7D;AAA6B,gBAAnB,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,UAAO,QAAQ,GAAG,CAAC,CAAE,CAAC;AAC7D,YAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AACnC,gBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACpC,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;AAClC,gBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACpC,gBAAM,OAAO;AACb,aAAK;AACL;AAA6B,gBAAnB,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;AACxD,YAAI,IAAI,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;AAC7C,gBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACpC,gBAAM,IAAI,CAAC,YAAY,EAAE,CAAC;AAC1B,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;AAC9B,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AACnC,gBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACpC,aAAK;AACL,YAAI,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,SAAG;AAEH;AAAY;AACO;AAClB;AAEO,QAJN,uCAAS;AACX;AAAyB;AAGvB;AAAY,QAJZ,UAAU,EAAE;AACd,YAAI,OAAU,EAAE,SAAI,IAAI,CAAC,YAAc,CAAC;AACxC,SAAG;AAEH;AAAY;AACK;AACF;AAAY,QAFzB,yCAAW;AAAO;AAEpB;AAAuB;AAAY,QAFjC,UAAY,KAAK;AACnB,YAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACxB;AAA6B,gBAAnB,GAAG,GAAQ,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC;AACnD,YAAI,IAAI,GAAG,IAAI,GAAG,CAAC,iBAAiB,EAAE;AACtC,gBAAM,UAAU;AAAM;AACM;AACjB,gBAFM;AACX,oBAAE,GAAG,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpC,iBAAO,GAAE,CAAC,CAAC,CAAC;AACZ,aAAK;AACL,SAAG;AAEH;AAAY;AACI;AAAuB;AAAY,QADjD,0CAAY;AAAO;AACI;AAAuB;AACxC,QAFN,UAAa,KAAK;AACpB;AAA6B,gBAAnB,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC;AAClD;AAA6B,gBAAnB,QAAQ,GAAG,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;AAC1E,YAAI,QACE,QAAQ;AACd,gBAAM,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;AAC/B,iBAAO,IAAI,CAAC,MAAM,CAAC,aAAa;AAChC,oBAAQ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC1D,iBAAO,KAAK,CAAC,OAAO,IAAI,EAAE,IAAI,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,EAC7C;AACN,SAAG;AAEH;AAAY;AACS;AAAuB;AACzC,QAFD,qCAAO;AAAO;AACS;AAAuB;AACzC,QAFL,UAAQ,KAAK;AACf;AAA6B,gBAAnB,GAAG,GAAQ,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC;AACnD,YAAI,IAAI,GAAG,EAAE;AACb,gBAAM,GAAG,CAAC,KAAK,EAAE,CAAC;AAClB,aAAK;AACL,SAAG;AAEH;AACM;AACgB;AAAY;AAC5B;AAEC;AAAY,QAJjB,sCAAQ;AAAI;AACgB;AAAY;AAC5B;AAEC;AACd,QALC,UAAS,KAAU;AACrB,YADE,iBAwBC;AACH,YAxBI,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;AACtD,gBAAQ,OAAO;AACf,aAAK;AACL,YAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACzB,YAAK,IAAI,CAAC,KAAK,EAAE;AACjB,gBAAO,IAAI,CAAC,YAAY,EAAE,CAAC;AAC3B,gBAAO,OAAO;AACd,aAAM;AACN,YAAK,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACjD,YAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO;AAAM;AACjB;AAA8B;AACjC;AAAgB,YAFD,UAAC,CAAC,EAAE,GAAG;AAAI,gBAChC,IAAI,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE;AAC1D,oBAAY,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACnE,iBAAW;AACX,aAAM,EAAC,CAAC;AACR,YAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AACxC;AAAiC,oBAArB,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAK,IAAI,CAAC,YAAc,CAAC;AAC7E;AAAiC,oBAAvB,qBAAqB,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7G;AAAiC,oBAAvB,GAAG,GAAS,aAAa,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,qBAAqB,CAAC;AAC9F,gBAAM,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE;AAC5B,oBAAQ,GAAG,CAAC,KAAK,EAAE,CAAC;AACpB,iBAAO;AACP,aAAM;AACN,YAAK,IAAI,CAAC,YAAY,EAAE,CAAC;AACzB,SAAG;AAEH;AACW;AACI;AACN,QAFP,0CAAY;AACZ;AACK;AAAY,QAFjB;AAAc,YAAd,iBAQC;AACH;AACI,gBATI,GAAG,GAAG,EAAE;AAChB,YAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO;AAAM;AACtC;AACjB;AAAgB,YAFkC,UAAA,CAAC;AAAI,gBAC1D,IAAI,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;AAC1C,oBAAQ,GAAG,IAAI,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC9C,iBAAO;AACP,aAAK,EAAC,CAAC;AACP,YAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjC,SAAG;AACF;AAAY;AACF;AAAY,QADrB,0CAAY;AAAO;AACF;AAAY,QAD7B;AAAc,YACZ,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe;AAAC,kBAC/B,UAAU;AAAC,kBACX,IAAI,CAAC,MAAM,CAAC,gBAAgB;AAAC,sBAC3B,KAAK;AACf,sBAAU,MAAM,CAAC;AACjB,SAAG;AACF;AAAY;AACK;AAClB;AAAY,QAFV,yCAAW;AACZ;AAAwB;AAClB;AAAY,QAFjB,UAAY,CAAC;AACf;AACQ;AAA6B,gBAA7B,aAAa,GAAG,CAAC,CAAC,aAAa,IAAI,MAAM,CAAC,eAAe,CAAC;AAClE,YAAI,IAAG,aAAa,EAAC;AACrB;AAAiC,oBAAxB,UAAU,GAAE,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC;AAClD,aAAK;AACL;AACQ,YAAJ,CAAC,CAAC,eAAe,EAAE,CAAC;AACxB,YAAI,CAAC,CAAC,cAAc,EAAE,CAAC;AACvB,YAAI,IAAI,CAAC,UAAU,EAAE;AACrB,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC9B,SAAG,CAvLS;AAAC;oCANZC,cAAS,SAAC,3DAM6B;AACA,oBAT/B,QAAQ;AAAG;4CAIlB,5CAJgC;KAIxB,EAAE,cAAc,rBAHK,6BAQ5BC,UAAK;GAJN,HAIW,oCAEVC,WAAM;AAAI;;2eANiC;;;wDAE7C;;;;;;;;;;;;;;oBAIsB;AAAC,QAqLxB,0BAAC;AACA,KA/LD,IA8LC;AACD;AAAiB;AAAyB,QAxLxC,qCAAwC;AAC1C;AAAyB,QACvB,4CAAqD;AACvD;AACG,QADD,sCAAmB;AACrB;AAAyB,QAAvB,4CAA6D;AAC/D;AACQ,QADN,2CAGsD;AACxD;AACI,QADF,wCAAkB;AACpB;AAAY;AAAqB;AAE1B;AACH,QAHU,uCAA0B;AAAC;AAExC;AAAC;AAAQ;AACuB;AAEqC;ACjCtE;AAA2D,QAOzD,6BAAqB,MAAkB,EAAU,SAAoB;AAAI,YAApD,WAAM,GAAN,MAAM,CAAY;AAAC,YAAS,cAAS,GAAT,SAAS,CAAW;AAAC,SAAI;AAC5E;AACW;AACQ;AAAY,QAD7B,sCAAQ;AACR;AAAuB;AACtB,QAFD;AACD,YAAG,IAAG,CAAC,IAAI,CAAC,kBAAkB,EAAC;AAChC,gBAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,YAAY,EAAE,8EAA8E,CAAC,CAAC;AAC3J,aAAK;AACL,SAAG,CARU;AAAC;oCAHbC,cAAS,SAAC,3DAIL;iBAHJ,QAAQ,EAAE,3BAIuB,oBAPfC,eAAU;EAGJ,sBACzB,xBAJiC,oBAAFC,cAAS;AAAG;AAAc;AAGxC,yCAGfJ,UAAK;AAAI;;;;;;;;;;oBAAU;AAAC,QASvB,0BAAC;AAAE,KAbH,IAaC;AAAC;AAAiB;AAAyB,QAT1C,iDAAoC;AACtC;AAAY;AAAqB;AAAoB;AAAY,QAAlD,qCAA0B;AAAC;AAAY;AAAqB;AAGzE;AAAY,QAH6B,wCAA4B;AAAC;AAExE;AAAC;AAAQ;AACuB;AACwG;ACXxI;AACc,QAMd;AAEK,SAQ4B;4DAVhCK,aAAQ;KAAC,0BACR,OAAO,EAAE,8BACPC,mBAAY,8BACZC,iBAAW,8BACXC;iBAAmB;UACpB;KACD,YAAY,EAAE,CAAC;CAAmB,EAAE,QAAQ,EAAE;iBAAmB,CAAC,0BAClE,OAAO,EAAE,CAAC,mBAAmB,CAAC,0BAC9B,SAAS,EAAE,CAAC,QAAQ,CAAC,sBACtB;;;;;;;;;;;;;gDACY;AAAC,QAAkB,uBAAC;AAChC,KAXD;AAAK;AAAC;AAGM;AAGR;AAA2B;AAAsC;AACrE;AAGM;AAAC;AAAM","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keys'\r\n})\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value: any): string[] {\r\n    return Object.keys(value)\r\n  }\r\n}\r\n","export class Config {\r\n    inputStyles?: {[key: string]: any};\r\n    containerStyles?: {[key: string]: any};\r\n    allowKeyCodes?: string[];\r\n    length: number;\r\n    allowNumbersOnly?: boolean;\r\n    inputClass?: string;\r\n    containerClass?: string;\r\n    isPasswordInput?: boolean;\r\n    disableAutoFocus?: boolean;\r\n    placeholder?: string;\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { KeysPipe } from '../../pipes/keys.pipe';\r\nimport { Config } from '../../models/config';\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'ng-otp-input',\r\n  templateUrl: './ng-otp-input.component.html',\r\n  styleUrls: ['./ng-otp-input.component.scss']\r\n})\r\nexport class NgOtpInputComponent implements OnInit, AfterViewInit {\r\n  @Input() config: Config = { length: 4 };\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onInputChange = new EventEmitter<string>();\r\n  otpForm: FormGroup;\r\n  inputControls: FormControl[] = new Array(this.config.length);\r\n  componentKey =\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2) + new Date().getTime().toString(36);\r\n  inputType: string;\r\n  constructor(private keysPipe: KeysPipe) {}\r\n\r\n  ngOnInit() {\r\n    this.otpForm = new FormGroup({});\r\n    for (let index = 0; index < this.config.length; index++) {\r\n      this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n    }\r\n    this.inputType = this.getInputType();\r\n    \r\n  }\r\n  ngAfterViewInit(): void {\r\n    if (!this.config.disableAutoFocus) {\r\n      const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n      if (containerItem) {\r\n        containerItem.addEventListener('paste', (evt) => this.handlePaste(evt));\r\n        const ele: any = containerItem.getElementsByClassName('otp-input')[0];\r\n        if (ele && ele.focus) {\r\n          ele.focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private getControlName(idx) {\r\n    return `ctrl_${idx}`;\r\n  }\r\n\r\n  ifLeftArrow(event) {\r\n    return this.ifKeyCode(event, 37);\r\n  }\r\n\r\n\r\n  ifRightArrow(event) {\r\n    return this.ifKeyCode(event, 39);\r\n  }\r\n\r\n  ifBackspaceOrDelete(event) {\r\n    return (\r\n      event.key === 'Backspace' ||\r\n      event.key === 'Delete' ||\r\n      this.ifKeyCode(event, 8) ||\r\n      this.ifKeyCode(event, 46)\r\n    );\r\n  }\r\n\r\n  ifKeyCode(event, targetCode) {\r\n    const key = event.keyCode || event.charCode;\r\n    // tslint:disable-next-line: triple-equals\r\n    return key == targetCode ? true : false;\r\n  }\r\n  onKeyDown($event) {\r\n    var isSpace=this.ifKeyCode($event,32)\r\n    if (isSpace) {// prevent space\r\n    return false;\r\n    }\r\n  }\r\n\r\n  onKeyUp($event, inputIdx) {\r\n    const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n    const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n    if (this.ifRightArrow($event)) {\r\n      this.setSelected(nextInputId);\r\n      return;\r\n    }\r\n    if (this.ifLeftArrow($event)) {\r\n      this.setSelected(prevInputId);\r\n      return;\r\n    }\r\n    const isBackspace = this.ifBackspaceOrDelete($event);\r\n    if (isBackspace && !$event.target.value) {\r\n      this.setSelected(prevInputId);\r\n      this.rebuildValue();\r\n      return;\r\n    }\r\n    if (!$event.target.value) {\r\n      return;\r\n    }\r\n    if (this.ifValidEntry($event)) {\r\n      this.setSelected(nextInputId);\r\n    }\r\n    this.rebuildValue();\r\n  }\r\n\r\n  appendKey(id) {\r\n    return `${id}_${this.componentKey}`;\r\n  }\r\n\r\n  setSelected(eleId) {\r\n    this.focusTo(eleId);\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele && ele.setSelectionRange) {\r\n      setTimeout(() => {\r\n        ele.setSelectionRange(0, 1);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ifValidEntry(event) {\r\n    const inp = String.fromCharCode(event.keyCode);\r\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n    return (\r\n      isMobile ||\r\n      /[a-zA-Z0-9-_]/.test(inp) ||\r\n      (this.config.allowKeyCodes &&\r\n        this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n      (event.keyCode >= 96 && event.keyCode <= 105)\r\n    );\r\n  }\r\n\r\n  focusTo(eleId) {\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele) {\r\n      ele.focus();\r\n    }\r\n  }\r\n\r\n  // method to set component value\r\n  setValue(value: any) {\r\n    if (this.config.allowNumbersOnly && isNaN(value)) {\r\n        return;\r\n    }\r\n    this.otpForm.reset();\r\n     if (!value) {\r\n       this.rebuildValue();\r\n       return;\r\n     }\r\n     value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n     Array.from(value).forEach((c, idx) => {\r\n          if (this.otpForm.get(this.getControlName(idx))) {\r\n            this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n          }\r\n     });\r\n     if (!this.config.disableAutoFocus) {\r\n      const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n      var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n      let ele : any = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n      if (ele && ele.focus) {\r\n        ele.focus();\r\n      }\r\n     }\r\n     this.rebuildValue();\r\n  }\r\n\r\n\r\n  rebuildValue() {\r\n    let val = '';\r\n    this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n      if (this.otpForm.controls[k].value) {\r\n        val += this.otpForm.controls[k].value;\r\n      }\r\n    });\r\n    this.onInputChange.emit(val);\r\n  }\r\n  getInputType():string{\r\n    return this.config.isPasswordInput \r\n      ? 'password' \r\n      : this.config.allowNumbersOnly \r\n        ? 'tel'\r\n        : 'text';\r\n  }\r\n  handlePaste(e) {\r\n    // Get pasted data via clipboard API\r\n    let clipboardData = e.clipboardData || window['clipboardData'];\r\n    if(clipboardData){\r\n     var pastedData =clipboardData.getData('Text');\r\n    }\r\n    // Stop data actually being pasted into div\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (!pastedData) {\r\n      return;\r\n    }\r\n    this.setValue(pastedData);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[numberOnly]'\r\n})\r\nexport class NumberOnlyDirective {\r\n  @Input() disabledNumberOnly:boolean;\r\n  constructor (private _elRef: ElementRef, private _renderer: Renderer2) { }\r\n\r\n  ngOnInit() {\r\n    if(!this.disabledNumberOnly){\r\n      this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n    }\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { NgOtpInputComponent } from './components/ng-otp-input/ng-otp-input.component';\r\nimport { KeysPipe } from './pipes/keys.pipe';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NumberOnlyDirective } from './directives/number-only.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\r\n  exports: [NgOtpInputComponent],\r\n  providers: [KeysPipe]\r\n})\r\nexport class NgOtpInputModule { }\r\n"]}