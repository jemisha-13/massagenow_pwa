{"version":3,"file":"ng-otp-input.js","sources":["ng:/ng-otp-input/lib/pipes/keys.pipe.ts","ng:/ng-otp-input/lib/models/config.ts","ng:/ng-otp-input/lib/components/ng-otp-input/ng-otp-input.component.ts","ng:/ng-otp-input/lib/directives/number-only.directive.ts","ng:/ng-otp-input/lib/ng-otp-input.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keys'\r\n})\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value: any): string[] {\r\n    return Object.keys(value)\r\n  }\r\n}\r\n","export class Config {\r\n    inputStyles?: {[key: string]: any};\r\n    containerStyles?: {[key: string]: any};\r\n    allowKeyCodes?: string[];\r\n    length: number;\r\n    allowNumbersOnly?: boolean;\r\n    inputClass?: string;\r\n    containerClass?: string;\r\n    isPasswordInput?: boolean;\r\n    disableAutoFocus?: boolean;\r\n    placeholder?: string;\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { KeysPipe } from '../../pipes/keys.pipe';\r\nimport { Config } from '../../models/config';\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'ng-otp-input',\r\n  templateUrl: './ng-otp-input.component.html',\r\n  styleUrls: ['./ng-otp-input.component.scss']\r\n})\r\nexport class NgOtpInputComponent implements OnInit, AfterViewInit {\r\n  @Input() config: Config = { length: 4 };\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onInputChange = new EventEmitter<string>();\r\n  otpForm: FormGroup;\r\n  inputControls: FormControl[] = new Array(this.config.length);\r\n  componentKey =\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2) + new Date().getTime().toString(36);\r\n  inputType: string;\r\n  constructor(private keysPipe: KeysPipe) {}\r\n\r\n  ngOnInit() {\r\n    this.otpForm = new FormGroup({});\r\n    for (let index = 0; index < this.config.length; index++) {\r\n      this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n    }\r\n    this.inputType = this.getInputType();\r\n    \r\n  }\r\n  ngAfterViewInit(): void {\r\n    if (!this.config.disableAutoFocus) {\r\n      const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n      if (containerItem) {\r\n        containerItem.addEventListener('paste', (evt) => this.handlePaste(evt));\r\n        const ele: any = containerItem.getElementsByClassName('otp-input')[0];\r\n        if (ele && ele.focus) {\r\n          ele.focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private getControlName(idx) {\r\n    return `ctrl_${idx}`;\r\n  }\r\n\r\n  ifLeftArrow(event) {\r\n    return this.ifKeyCode(event, 37);\r\n  }\r\n\r\n\r\n  ifRightArrow(event) {\r\n    return this.ifKeyCode(event, 39);\r\n  }\r\n\r\n  ifBackspaceOrDelete(event) {\r\n    return (\r\n      event.key === 'Backspace' ||\r\n      event.key === 'Delete' ||\r\n      this.ifKeyCode(event, 8) ||\r\n      this.ifKeyCode(event, 46)\r\n    );\r\n  }\r\n\r\n  ifKeyCode(event, targetCode) {\r\n    const key = event.keyCode || event.charCode;\r\n    // tslint:disable-next-line: triple-equals\r\n    return key == targetCode ? true : false;\r\n  }\r\n  onKeyDown($event) {\r\n    var isSpace=this.ifKeyCode($event,32)\r\n    if (isSpace) {// prevent space\r\n    return false;\r\n    }\r\n  }\r\n\r\n  onKeyUp($event, inputIdx) {\r\n    const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n    const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n    if (this.ifRightArrow($event)) {\r\n      this.setSelected(nextInputId);\r\n      return;\r\n    }\r\n    if (this.ifLeftArrow($event)) {\r\n      this.setSelected(prevInputId);\r\n      return;\r\n    }\r\n    const isBackspace = this.ifBackspaceOrDelete($event);\r\n    if (isBackspace && !$event.target.value) {\r\n      this.setSelected(prevInputId);\r\n      this.rebuildValue();\r\n      return;\r\n    }\r\n    if (!$event.target.value) {\r\n      return;\r\n    }\r\n    if (this.ifValidEntry($event)) {\r\n      this.setSelected(nextInputId);\r\n    }\r\n    this.rebuildValue();\r\n  }\r\n\r\n  appendKey(id) {\r\n    return `${id}_${this.componentKey}`;\r\n  }\r\n\r\n  setSelected(eleId) {\r\n    this.focusTo(eleId);\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele && ele.setSelectionRange) {\r\n      setTimeout(() => {\r\n        ele.setSelectionRange(0, 1);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ifValidEntry(event) {\r\n    const inp = String.fromCharCode(event.keyCode);\r\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n    return (\r\n      isMobile ||\r\n      /[a-zA-Z0-9-_]/.test(inp) ||\r\n      (this.config.allowKeyCodes &&\r\n        this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n      (event.keyCode >= 96 && event.keyCode <= 105)\r\n    );\r\n  }\r\n\r\n  focusTo(eleId) {\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele) {\r\n      ele.focus();\r\n    }\r\n  }\r\n\r\n  // method to set component value\r\n  setValue(value: any) {\r\n    if (this.config.allowNumbersOnly && isNaN(value)) {\r\n        return;\r\n    }\r\n    this.otpForm.reset();\r\n     if (!value) {\r\n       this.rebuildValue();\r\n       return;\r\n     }\r\n     value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n     Array.from(value).forEach((c, idx) => {\r\n          if (this.otpForm.get(this.getControlName(idx))) {\r\n            this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n          }\r\n     });\r\n     if (!this.config.disableAutoFocus) {\r\n      const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n      var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n      let ele : any = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n      if (ele && ele.focus) {\r\n        ele.focus();\r\n      }\r\n     }\r\n     this.rebuildValue();\r\n  }\r\n\r\n\r\n  rebuildValue() {\r\n    let val = '';\r\n    this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n      if (this.otpForm.controls[k].value) {\r\n        val += this.otpForm.controls[k].value;\r\n      }\r\n    });\r\n    this.onInputChange.emit(val);\r\n  }\r\n  getInputType():string{\r\n    return this.config.isPasswordInput \r\n      ? 'password' \r\n      : this.config.allowNumbersOnly \r\n        ? 'tel'\r\n        : 'text';\r\n  }\r\n  handlePaste(e) {\r\n    // Get pasted data via clipboard API\r\n    let clipboardData = e.clipboardData || window['clipboardData'];\r\n    if(clipboardData){\r\n     var pastedData =clipboardData.getData('Text');\r\n    }\r\n    // Stop data actually being pasted into div\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (!pastedData) {\r\n      return;\r\n    }\r\n    this.setValue(pastedData);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[numberOnly]'\r\n})\r\nexport class NumberOnlyDirective {\r\n  @Input() disabledNumberOnly:boolean;\r\n  constructor (private _elRef: ElementRef, private _renderer: Renderer2) { }\r\n\r\n  ngOnInit() {\r\n    if(!this.disabledNumberOnly){\r\n      this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n    }\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { NgOtpInputComponent } from './components/ng-otp-input/ng-otp-input.component';\r\nimport { KeysPipe } from './pipes/keys.pipe';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NumberOnlyDirective } from './directives/number-only.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\r\n  exports: [NgOtpInputComponent],\r\n  providers: [KeysPipe]\r\n})\r\nexport class NgOtpInputModule { }\r\n"]}