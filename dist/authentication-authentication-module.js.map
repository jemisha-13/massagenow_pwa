{"version":3,"sources":["./node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","./src/app/authentication/authentication.module.ts","./src/app/authentication/confirm-password.validator.ts","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/register/register.component.ts","./src/app/authentication/register/register.component.html","./src/app/authentication/reset-password/reset-password.component.ts","./src/app/authentication/reset-password/reset-password.component.html","./src/app/authentication/verify-otp/verify-otp.component.ts","./src/app/authentication/verify-otp/verify-otp.component.html","./src/app/design-component/custom-spinner/custom-spinner.component.ts","./src/app/design-component/custom-spinner/custom-spinner.component.html","./src/app/design-component/custom-spinner/customer-spinner.module.ts","./src/app/design-component/skeleton/skeleton.component.ts","./src/app/design-component/skeleton/skeleton.component.html","./src/app/design-component/skeleton/skeleton.module.ts","./src/app/shared/url.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AAC/B;AAC3C;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACE;AACD;;AAEzC,8DAA8D;AAC9D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kGAAkG,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,IAAI,iCAAiC,EAAE,+FAA+F,CAAC,2DAAoB,MAAM,wBAAwB,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE;AAC9b,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,yDAAkB;AACnD,CAAC;AACD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,iBAAiB,0DAAmB,EAAE,2CAA2C;AACjF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAqBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,wDAAS,GAAG;AACvC,2BAA2B,4BAA4B;AACvD,oEAAoE,0DAAW;AAC/E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,+DAA+D,kBAAkB;AACjF;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,GAAG,GAAG,kBAAkB;AAC1C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AACh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","file":"authentication-authentication-module.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from '../authentication/login/login.component';\nimport { RegisterComponent } from '../authentication/register/register.component';\nimport { ForgotPasswordComponent } from '../authentication/forgot-password/forgot-password.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { NgOtpInputModule } from  'ng-otp-input';\nimport { VerifyOtpComponent } from './verify-otp/verify-otp.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { SkeletonModule } from '../design-component/skeleton/skeleton.module';\nconst routes: Routes = [\n    { path:'login', component:LoginComponent},\n    { path:'forgot-password', component:ForgotPasswordComponent},\n    { path:'register', component:RegisterComponent},\n    { path: '', redirectTo: 'login'},\n    { path: 'verify-otp',component:VerifyOtpComponent},\n    { path: 'reset-password',component:ResetPasswordComponent}\n]\n\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n        RegisterComponent,\n        ForgotPasswordComponent,\n        VerifyOtpComponent,\n        ResetPasswordComponent,\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        RouterModule.forChild(routes),\n        NgOtpInputModule,\n        SkeletonModule\n    ],\n    exports: [\n        LoginComponent,\n        RegisterComponent,\n        ForgotPasswordComponent\n    ]\n})\nexport class AuthenticatonModule { }\n","import { AbstractControl, FormGroup } from \"@angular/forms\";\nexport function ConfirmPasswordValidator(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n      let control = formGroup.controls[controlName];\n      let matchingControl = formGroup.controls[matchingControlName]\n      if (\n        matchingControl.errors &&\n        !matchingControl.errors.confirmPasswordValidator\n      ) {\n        return;\n      }\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ confirmPasswordValidator: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToasterService } from 'src/app/design-component/custom-toaster/toaster.service';\nimport { ApiServicesService } from 'src/app/services/api-services.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgetPasswordFrom!:FormGroup;\n  submitted:boolean=false\n  apiOtp: any;\n  constructor(private router:Router,\n     private service:ApiServicesService,\n     private newToast:ToasterService,\n     \n     )\n   {\n    this.forgetPasswordFrom= new FormGroup({\n      'email':new FormControl('',Validators.compose([Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]))\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n  // for forget password api\n  onSubmit(){\n    this.submitted=true;\n    var data={\n      \"email\":this.forgetPasswordFrom.value.email\n    }\n    if(this.forgetPasswordFrom.valid){\n    this.service.post(`customers/forgetpass`, data).subscribe((res:any)=>{\n      if(res.status==200){\n        this.newToast.success(res.message)\n        this.apiOtp=res.otp\n        console.log(this.apiOtp);\n        \n        this.router.navigate(['auth/verify-otp'],{queryParams:{apiOtp:this.apiOtp,email:data.email}})\n      }\n      else if(res.status==400){\n        this.newToast.warning(\"email Id not registered.\")\n      }\n    },(err)=>{\n      this.newToast.error(\"something went wrong\")\n    })\n  }\n  }\n\n\n  // convenience getter for easy access to form fields\n  get f() { return this.forgetPasswordFrom.controls; }\n\n\n  // routing\n  navigateToLogin(){\n    this.router.navigateByUrl('auth/login')\n  }\n  navigateBack(){\n  this.router.navigateByUrl('auth/login')\n\n}\n}\n","<div>\n    <i class=\"bi bi-arrow-left-short bi-icon-class backIcon\" (click)=\"navigateBack()\"></i>\n    <p class=\"header\">Forget password</p>\n</div>\n<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n\n            <div class=\"mb-5 p-5 card-body\">\n                <!-- Start Form-->\n                <form [formGroup]=\"forgetPasswordFrom\">\n                    <div class=\"form-group \">\n                        <input type=\"email\"  formControlName=\"email\" class=\"form-control\" \n                            placeholder=\"Enter your registered email address\" \n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                <div *ngIf=\"f.email.errors.pattern\">Please enter valid one.</div>\n                                \n                            </div>  \n                           \n                    </div>\n\n                    <!--Login Button-->\n                    <button type=\"button\" class=\"btn btn-primary btn-block  loginbtn\"\n                        name=\"login\" (click)=\"onSubmit()\">CONTINUE</button>\n                    <!--End Login Button-->\n\n                </form>\n                <!--End From-->\n                <p class=\"text-center mt-4\" (click)=\"navigateToLogin()\" >Login</p>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n","import { Location } from '@angular/common';\nimport { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { ToasterService } from 'src/app/design-component/custom-toaster/toaster.service';\nimport { ApiServicesService } from 'src/app/services/api-services.service';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { LocationService } from 'src/app/services/location.service';\nimport { LOGIN } from '../../shared/url';\ndeclare var google: any;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n  loginForm: FormGroup\n  submitted = false;\n  currentLocation: any;\n  lat: any;\n  getAddress: any;\n  lng: any;\n  isLoading : boolean = true;\n  bookingData: any;\n  constructor(\n              private formBuilder: FormBuilder,\n              private apiService : ApiServicesService,\n              private route : Router,\n              private activatedRoute: ActivatedRoute,\n              private locationService : LocationService,\n              private authService: AuthServiceService,\n              private toastService : ToasterService \n  ) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    })\n    // this.instanceLoader(true);\n  }\n\n  ngOnInit(): void {\n    this.instanceLoader(false);\n\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params) {\n        this.bookingData = params;\n        window.history.pushState(null, '', 'auth/login')\n      }\n    });\n  }\n\n  ngAfterViewInit() : void {\n    this.instanceLoader(false);\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit(form:any) {\n    this.instanceLoader(true);\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      this.instanceLoader(false);\n      return;\n    }\n\n    this.submitLogin(form);\n  }\n\n  submitLogin(form:any) {\n    console.log(form);\n    this.apiService.post(LOGIN,form.value).subscribe(res=>{\n      console.log(res);\n      this.instanceLoader(false);\n      localStorage.setItem('customerLogin',JSON.stringify(res));\n      localStorage.setItem('customerToken',res.token);\n      if (this.bookingData && this.bookingData.pathUrl) {\n        this.route.navigate([this.bookingData.pathUrl], { queryParams: this.bookingData });\n      }else{\n        this.route.navigateByUrl('main/home');\n      }\n      this.apiService.setLoginData(res);\n      this.getPosition();\n      // this.locationService.getPosition().then(res=>{\n      //   console.log(res);\n      //   this.locationService.getLocationPromise(res.lat,res.lng).then(res=>{\n      //    console.log(res);\n      //  },err=>{\n      //   console.log(err);\n      // });\n      // //  console.log(this.locationService.getGeoLocation(res.lat, res.lng));\n      // //  console.log(data);\n      // })\n      // console.log( this.apiService.setLoginData(res));\n    },err=>{\n      this.route.navigateByUrl('auth/login');\n      this.toastService.error(err.body,false,1000);\n      setTimeout(() => {\n        this.instanceLoader(false);\n      }, 1000);\n      // window.location.reload();\n      console.log(err);\n    })\n  }\n\n\n  getPosition()\n  {\n    this.getGeoLocation( );\n    // return new Promise((resolve, reject) => {\n\n    //   navigator.geolocation.getCurrentPosition(resp => {\n    //       console.log('something',resp);\n    //       resolve({lng: resp.coords.longitude, lat: resp.coords.latitude});\n    //       this.getGeoLocation( );\n    //       // if(this.currentLocation != ''){\n    //       //     return this.currentLocation;\n    //       // }\n    //     },\n    //     err => {\n    //       reject(err);\n    //     });\n    // });\n  }\n\n  getGeoLocation() {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n            if (position) {\n                this.lat = position.coords.latitude;\n                this.lng = position.coords.longitude;\n                this.getAddress = (this.lat, this.lng)\n                console.log(position)\n                // this.apiloader.load().then(() => {\n                    let geocoder = new google.maps.Geocoder;\n                    let latlng = {\n                        lat: this.lat,\n                        lng: this.lng\n                    };\n                    geocoder.geocode({\n                        'location': latlng\n                    },(results:any)=> {\n                        console.log(results);\n                        if (results[0]) {\n                            this.currentLocation = results[0];\n                            localStorage.setItem('customerLocation',JSON.stringify(results[0]));\n                            console.log('current location ==>>',results[0]);\n                            this.apiService.setCustomerLocation(results[0]);\n                            if(this.currentLocation != ''){\n                                return this.currentLocation;\n                            }\n                            console.log(this.assgin);\n                        } else {\n                            console.log('Not found');\n                        }\n                    });\n        }\n      },\n        (error:any) => {\n          return console.log(error);\n        });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n    // if (navigator.geolocation) {\n    //     navigator.geolocation.getCurrentPosition((position) => {\n    //         if (position) {\n    //             this.lat = position.coords.latitude;\n    //             this.lng = position.coords.longitude;\n    //             this.getAddress = (this.lat, this.lng)\n    //             console.log('position yaha ayega',position)\n    //             // this.apiloader.load().then(() => {\n    //                 let geocoder = new google.maps.Geocoder;\n    //                 let latlng = {\n    //                     lat: this.lat,\n    //                     lng: this.lng\n    //                 };\n    //                 geocoder.geocode({\n    //                     'location': latlng\n    //                 },(results:any)=> {\n    //                     console.log(results);\n    //                     if (results[0]) {\n    //                         this.currentLocation = results[0];\n    //                         localStorage.setItem('customerLocation',JSON.stringify(results[0]));\n    //                         console.log('current location ==>>',results[0]);\n    //                         if(this.currentLocation != ''){\n    //                             return this.currentLocation;\n    //                         }\n    //                         console.log(this.assgin);\n    //                     } else {\n    //                         console.log('Not found');\n    //                     }\n    //                 });\n    //             // });\n    //         }\n    //     })\n    // }\n    // if (navigator.geolocation) {\n    //     let geocoder = new google.maps.Geocoder();\n    //     let latlng = new google.maps.LatLng(lat, lng);\n    //     let request = {\n    //         latLng: latlng\n    //     };\n    //     geocoder.geocode(request, (results:any, status:any) => {\n    //         console.log(results, status);\n    //         if (status == google.maps.GeocoderStatus.OK) {\n    //             let result = results[0];\n    //             let rsltAdrComponent = result.address_components;\n    //             let resultLength = rsltAdrComponent.length;\n    //             if (result != null) {\n    //                 console.log('google geo location ===>>>',result);\n    //                 // this.marker.buildingNum = rsltAdrComponent.find(x = > x.types == 'street_number').long_name;\n    //                 // this.marker.streetName = rsltAdrComponent.find(x = > x.types == 'route').long_name;\n    //             } else {\n    //                 alert(\"No address available!\");\n    //             }\n    //         }\n    //     });\n    // }\n}\n  assgin(assgin: any) {\n    throw new Error('Method not implemented.');\n  }\n\n\n  // routing\n  navigateToSignup() {\n    console.log(this.route.navigateByUrl('auth/register'));\n  }\n  navigateToForgetPassword(){\n    this.route.navigateByUrl('auth/forgot-password')\n  }\n\n  instanceLoader(type : boolean) {\n    type ? setTimeout(() => {\n      this.isLoading = type\n    }, 1000) :  setTimeout(() => {\n      this.isLoading = type;\n    }, 1000);\n  }\n\n}\n","<div class=\"parentLoader\" *ngIf=\"isLoading\">\n    <app-custom-spinner></app-custom-spinner>\n</div>\n<div class=\"container mt-4\" *ngIf=\"!isLoading\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n\n            <div class=\"mb-5 p-5 card-body\">\n                <div class=\"text-center\">\n                    <span class=\"text-warning\"><img src=\"../../../assets/images/bookus-new.png\"></span>\n                </div>\n                <p class=\"text-align-center\">BookUS</p>\n                <p class=\"text-align-center\">LOGIN TO YOUR ACCOUNT</p>\n\n                <!-- Start Form-->\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm)\"> \n                    <!--Email Input-->\n                    <div class=\"form-group \">\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\"\n                            placeholder=\"Email\"  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\n                            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                              </div>\n                    </div>\n                    <!--End Email Input-->\n\n                    <!--Password-->\n                    <div class=\"form-group \">\n                        <input type=\"password\" name=\"password\" class=\"form-control\"formControlName=\"password\"\n                            placeholder=\"Password\"  [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                              </div>\n                    </div>\n                    <!--End Password Input-->\n\n                    <!--Forgot Password-->\n                    <div class=\"form-group mt-2 text-right\">\n                        <a  class=\"text font-weight-bold\" name=\"forget_password\" (click)=\"navigateToForgetPassword()\">Forgot password?</a>\n                    </div>\n                    <!--End Forgot Password-->\n\n                    <!--Login Button-->\n                    <button type=\"submit\" class=\"btn btn-primary btn-block rounded-pill loginbtn\"\n                        name=\"login\">Log in</button>\n                    <!--End Login Button-->\n\n                    <h6 class=\"mt-3 account1 text-center\"> Don't Have an account ?</h6>\n                    <h6 class=\"mt-2 account\"> <a (click)=\"navigateToSignup()\" class=\"account\">Sign Up</a></h6>\n\n                    <div class=\"row py-2\">\n                        <div class=\"col-5\">\n                            <hr>\n                        </div>\n                        <div class=\"col-2 text-center\">\n                            or\n                        </div>\n                        <div class=\"col-5\">\n                              <hr>\n                        </div>\n                    </div>\n                </form>\n                <!--End From-->\n\n                  <!-- Login With Facebook-->\n\n                  <div>\n                    <a class=\"btn-fb\">\n                        <div class=\"fb-content\">\n                            <div class=\"logo\">\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary btn-block facebookbtn\">Login in with\n                                Facebook</button>\n                        </div>\n                    </a>\n                </div>\n                <!--End Login With Facebook-->\n                </div>\n            </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { ToasterService } from 'src/app/design-component/custom-toaster/toaster.service';\nimport { ApiServicesService } from 'src/app/services/api-services.service';\nimport { ConfirmPasswordValidator} from '../confirm-password.validator'; \n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted: boolean = false;\n  loginData: any={};\n  map:any;\n  lat:any;\n  lng: any;\n  \n\n  constructor(private formBuilder: FormBuilder,\n     private route: Router,\n     private service:ApiServicesService,\n     private newToast:ToasterService\n     \n     ) {\n      this.GetCurrentLocation();\n\n    this.registerForm = this.formBuilder.group({\n      firstname: ['', Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z][a-zA-Z\\\\s]+$')])],\n      lastname: ['',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z][a-zA-Z\\\\s]+$')])],\n      mobile: ['',Validators.compose([Validators.required,Validators.pattern('(([+][(]?[0-9]{1,3}[)]?)|([(]?[0-9]{4}[)]?))\\s*[)]?[-\\s\\.]?[(]?[0-9]{1,3}[)]?([-\\s\\.]?[0-9]{3})([-\\s\\.]?[0-9]{3,4})')])],\n      email: ['',Validators.compose([Validators.required,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')])],\n      password: ['',Validators.compose([Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$')])],\n      confirmpassword: ['',Validators.required]\n    },\n    {\n      validator: ConfirmPasswordValidator(\"password\", \"confirmpassword\")\n    }\n    );\n    // this.loginData=JSON.parse(localStorage.getItem('customerLogin')!)\n    \n  }\n\n  passwordMatchValidator(frm: FormGroup) {\n    return frm.controls['password'].value === \n    frm.controls['confirmpassword'].value ? null : {'mismatch': true};\n        }\n\n  ngOnInit(): void {\n  }\n\n  // code to allow location permission\n  public GetCurrentLocation(): void {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position)  =>            { \n         this.ShowLocation(position, this.map);\n      });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  private ShowLocation(position: any, map: any): void {\n    this.lng = +position.coords.longitude;\n    this.lat = +position.coords.latitude;\n    console.log(position.coords.latitude);\n  }\n\n\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value))\n    // for sign up api\n    else {\n      let data = {\n        \"email\":this.registerForm.value.email,\n        \"firstName\":this.registerForm.value.firstname,\n        \"geo_location\":{\n          \"coordinates\":[this.lat ,this.lng],\n          \"type\":\"Point\"\n        },\n        \"lastName\":this.registerForm.value.lastname,\n        \"mobile\":this.registerForm.value.mobile,\n        \"password\":this.registerForm.value.password,\n        \"notifyBy\":\"Email\",\n\n      }\n       if(this.registerForm.valid){\n      this.service.post(`customers`,data).subscribe((res:any)=>{\n        if(res.status==200){\n          this.newToast.success(res.message)\n          // this.redirectLogin();\n          this.route.navigateByUrl('/auth/login');\n        }\n        if(res.status==409){\n          this.newToast.info(\"customer already register.\")\n          // customer already register\n        }\n      },(err)=>{\n        this.newToast.error(\"something went wrong\")\n      })\n      \n    }\n  }\n}\n  redirectLogin() {\n    this.route.navigateByUrl('auth/login');\n  }\n\n}\n","<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n\n            <div class=\"mb-5 p-5 card-body\">\n                <div class=\"text-center\">\n                    <span class=\"text-warning\"><img src=\"../../../assets/images/BookUs_logo.png\"></span>\n                </div>\n\n                <!-- Start Form-->\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n                    <!--First Name-->\n                    <div class=\"form-group \">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"firstname\" placeholder=\"First Name\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.firstname.errors }\">\n                        <div *ngIf=\"submitted && f.firstname.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.firstname.errors.required\">First Name is required</div>\n                            <div *ngIf=\"f.firstname.errors.pattern\">please enter valid one.</div>\n\n                        </div>\n                    </div>\n                    <!--End First Name-->\n\n                    <!--Last Name-->\n                    <div class=\"form-group \">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"lastname\" placeholder=\"Last Name\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.lastname.errors }\">\n                        <div *ngIf=\"submitted && f.lastname.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.lastname.errors.required\">Last Name is required</div>\n                            <div *ngIf=\"f.lastname.errors.pattern\">please enter valid one.</div>\n\n                        </div>\n                    </div>\n                    <!--End Last Name-->\n\n                    <!--Email-->\n                    <div class=\"form-group \">\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\" placeholder=\"Email\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.pattern\">please enter valid one.</div>\n\n                        </div>\n                    </div>\n                    <!--End Email-->\n\n                    <!--Mobile-->\n                    <div class=\"form-group \">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"mobile\" placeholder=\"Mobile\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.mobile.errors }\">\n                        <div *ngIf=\"submitted && f.mobile.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.mobile.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.mobile.errors.pattern\">please enter valid one.</div>\n\n                        </div>\n                    </div>\n                    <!--End Mobile-->\n\n                    <!--Password-->\n                    <div class=\"form-group \">\n                        <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Password\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">password is required</div>\n                            <div *ngIf=\"f.password.errors.pattern\">\n                                Minimum eight characters,\n                                At least one uppercase letter,\n                                At least one lowercase letter,\n                                At least one number,\n                                At least one special character,\n                            </div>\n                        </div>\n                    </div>\n                   \n                    <!--End Password-->\n\n                    <!--Confirm Password-->\n                    <div class=\"form-group \">\n                        <input type=\"password\" class=\"form-control\" formControlName=\"confirmpassword\"\n                            placeholder=\"Confirm Password\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.confirmpassword.errors }\">\n                        <div *ngIf=\"submitted && f.confirmpassword.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.confirmpassword.errors.required\">Confirm Password is required</div>\n                            <div class=\"error-msg\"\n                                *ngIf=\"registerForm.value.password !== registerForm.value.confirmpassword\">Password\n                                Mismatch.</div>\n                        </div>\n                    </div>\n                    <!--End Password-->\n\n                    <!--Sign Up Button-->\n                    <button type=\"submit\" class=\"btn btn-primary btn-block rounded-pill loginbtn\"\n                        name=\"login\">Sign Up</button>\n                    <!--End Sign Up Button-->\n\n                    <div class=\"row py-2\">\n                        <div class=\"col-5\">\n                            <hr>\n                        </div>\n                        <div class=\"col-2 text-center\">\n                            or\n                        </div>\n                        <div class=\"col-5\">\n                            <hr>\n                        </div>\n                    </div>\n                </form>\n                <!--End From-->\n\n                <!-- Login With Facebook-->\n\n                <div>\n                    <a class=\"btn-fb\">\n                        <div class=\"fb-content\">\n                            <div class=\"logo\">\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary btn-block facebookbtn\">Login in with\n                                Facebook</button>\n                        </div>\n                    </a>\n                    <h6 class=\"mt-5 account1 text-center\"> Don't Have an account ?<a (click)=\"redirectLogin()\">\n                            Login</a></h6>\n                </div>\n                <!--End Login With Facebook-->\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'src/app/design-component/custom-toaster/toaster.service';\nimport { ApiServicesService } from 'src/app/services/api-services.service';\nimport { ConfirmPasswordValidator } from '../confirm-password.validator';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  resetPasswordFrom!:FormGroup\n  submitted: boolean=false;\n  email: any;\n  apiOtp: any;\n  constructor(private active:ActivatedRoute,\n    private service:ApiServicesService,\n    private router:Router,\n    private formBuilder:FormBuilder,\n    private newToast:ToasterService\n    ) {\n    this.resetPasswordFrom= this.formBuilder.group({\n      password: ['',Validators.compose([Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$')])],\n      confirmpassword: ['',Validators.required],\n\n\n    },\n    {\n      validator: ConfirmPasswordValidator(\"password\", \"confirmpassword\")\n    }\n    );\n\n    this.active.queryParams.subscribe((params)=>{\n      this.email=params.email;\n      this.apiOtp=params.apiOtp\n      console.log(this.email, this.apiOtp);\n      \n    })\n\n   }\n   passwordMatchValidator(frm: FormGroup) {\n    return frm.controls['password'].value === \n    frm.controls['confirmpassword'].value ? null : {'mismatch': true};\n        }\n\n  ngOnInit(): void {\n  }\n\n  // api to reset password\n  confirm(){\n    this.submitted=true\n\n    let data={\n      'email':this.email,\n      'otp':this.apiOtp,\n      'password':this.resetPasswordFrom.value.password\n    }\n    if(this.resetPasswordFrom.valid){\n    this.service.post(`customers/resetpass`,data).subscribe((res:any)=>{\n      if(res.status==200){\n        this.newToast.success(res.message)\n        this.router.navigate(['auth/login']);\n      } \n    },(err)=>{\n      this.newToast.error(\"something went wrong\")\n    })\n  }\n\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetPasswordFrom.controls; }\n\n  navigateBack(){\n    this.router.navigateByUrl('auth/forgot-password')\n  \n  }\n}\n","<div>\n    <i class=\"bi bi-arrow-left-short bi-icon-class backIcon\" (click)=\"navigateBack()\"></i>\n    <p class=\"header\">Reset Password</p>\n</div>\n<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n\n            <div class=\"mb-5 p-5 card-body\">\n                <!-- Start Form-->\n                <form [formGroup]=\"resetPasswordFrom\">\n                    <div class=\"form-group \">\n                        <input type=\"password\" value=\"12345678\" formControlName=\"password\" class=\"form-control\" \n                            placeholder=\"New Password\" \n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\">password is required</div>\n                                <div *ngIf=\"f.password.errors.pattern\">Please enter valid one.</div>\n                                \n                            </div>  \n                           \n                    </div>\n\n                    <div class=\"form-group \">\n                        <input type=\"email\"  formControlName=\"confirmpassword\" class=\"form-control\" \n                            placeholder=\"Confirm Password\" \n                            [ngClass]=\"{ 'is-invalid': submitted && f.confirmpassword.errors }\" />\n                            <div *ngIf=\"submitted && f.confirmpassword.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.confirmpassword.errors.required\">confirmpassword is required</div>\n                                <div *ngIf=\"f.confirmpassword.errors.pattern\">Please enter valid one.</div>\n                                <div class=\"error-msg\"\n                                *ngIf=\"resetPasswordFrom.value.password !== resetPasswordFrom.value.confirmpassword\">Password\n                                Mismatch.</div>\n                            </div>  \n                           \n                    </div>\n\n                    <!--Login Button-->\n                    <button type=\"button\" class=\"btn btn-primary btn-block  loginbtn\"\n                        name=\"login\" (click)=\"confirm()\">CONFIRM</button>\n                    <!--End Login Button-->\n\n                </form>\n                <!--End From-->\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'src/app/design-component/custom-toaster/toaster.service';\nimport { ApiServicesService } from 'src/app/services/api-services.service';\nimport { ForgotPasswordComponent } from '../forgot-password/forgot-password.component';\n\n@Component({\n  selector: 'app-verify-otp',\n  templateUrl: './verify-otp.component.html',\n  styleUrls: ['./verify-otp.component.scss']\n})\n\nexport class VerifyOtpComponent implements OnInit {\n\n  config = {\n    allowNumbersOnly: true,\n    length: 4,\n    isPasswordInput: false,\n    disableAutoFocus: false,\n    placeholder: '',\n    inputStyles: {\n      'width': '50px',\n      'height': '50px'\n    }\n  };\n  otp: any;\n  apiOtp: any;\n  email: any;\n  constructor(private active:ActivatedRoute, \n    public router:Router,\n    private service:ApiServicesService,\n    private newToast:ToasterService\n    ) \n  {\n    this.active.queryParams.subscribe((params)=>{\n      this.apiOtp=params.apiOtp;\n      this.email=params.email\n      console.log('dfs', this.email);\n      \n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n  onOtpChange(otp:any){\n    this.otp=otp;\n    console.log(this.otp);\n  }\n  // otp verify check and route to reset password\n  verify(){\n    if(this.apiOtp=this.otp){\n      // this.newToast.success(\"Otp verified successfully.\")\n      \n        this.router.navigate(['auth/reset-password'],{queryParams:{email:this.email,apiOtp:this.apiOtp}})\n      \n    }\n    // else if(this.apiOtp!=this.otp){\n    //   this.newToast.warning(\" Enter valid otp \")\n    // }\n  }\n  // api for resend otp \n  resend(){\n    let data={\n      \"email\":this.email\n    }\n    \n    this.service.post(`customers/forgetpass`, data).subscribe((res:any)=>{\n      if(res.status==200){\n        this.newToast.success(res.message)\n      }\n      else if(res.status==400){\n        // this.newToast.info('')\n      }\n    },(err)=>{\n      this.newToast.error(\"something went wrong.\")\n    })\n\n  }\n\n  navigateBack(){\n    this.router.navigateByUrl('auth/forgot-password')\n  \n  }\n \n  \n}\n","<div>\n    <i class=\"bi bi-arrow-left-short bi-icon-class backIcon\" (click)=\"navigateBack()\"></i>\n    <p class=\"header\">Enter Otp</p>\n</div>\n\n<div class=\"otp-wrapper\">\n    <div class=\"container\">\n        <div class=\"card\">\n        <p class=\"a-o-i\">Enter Otp</p>\n        <h5>Verification code has been sent to your registered email address</h5>\n        <ng-otp-input #ngOtpInput (onInputChange)=\"onOtpChange($event)\" placeholder=\"0\" [config]=\"config\"></ng-otp-input>\n        <p class=\"mt-4 resend\" (click)=\"resend()\" >Resend</p>\n        <button class=\"verify\" (click)=\"verify()\">Verify</button>\n        <!-- <span *ngIf=\"otp\" class=\"o-t-p\">Entered otp :-{{otp}}</span> -->\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-custom-spinner',\n  templateUrl: './custom-spinner.component.html',\n  styleUrls: ['./custom-spinner.component.scss']\n})\nexport class CustomSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinner-wrapper\">\n    <div class=\"inner-spinner\">\n        <img src =\"../../../assets/images/35.gif\">\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomSpinnerComponent } from '../custom-spinner/custom-spinner.component';\n \n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NgbModule\n  ],\n  exports : [\n  ],\n  providers:[]\n  \n})\nexport class CustomSpinnerModule { }\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-skeleton',\n  templateUrl: './skeleton.component.html',\n  styleUrls: ['./skeleton.component.scss']\n})\nexport class SkeletonComponent implements OnInit, OnChanges {\n\n  constructor() { }\n\n  @Input() skeletonData : any = '';\n  ngOnInit(): void {\n    // console.log('hello world',this.skeletonData);\n  }\n\n  ngOnChanges() {\n    // console.log('no data string value==>>>', this.skeletonData);\n  }\n}\n","        <div class=\"col-12 text-center\">\n            <div class=\"notAvailable-img\">\n                <img class=\"img-class\" src=\"../../../assets/images/no_image.png\">\n            </div>\n            <p>{{skeletonData}}</p>\n        </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SkeletonComponent } from './skeleton.component'\nimport { CustomSpinnerComponent } from '../custom-spinner/custom-spinner.component'\nimport { CustomSpinnerModule } from '../custom-spinner/customer-spinner.module'\nimport { SidemenuComponentsModule } from 'src/app/sidemenu-components/sidemenu-components.module';\n\n\n@NgModule({\n  declarations: [SkeletonComponent,CustomSpinnerComponent],\n  imports: [\n    CommonModule,\n    CustomSpinnerModule\n  ],\n  exports : [\n    SkeletonComponent,CustomSpinnerComponent\n  ]\n})\nexport class SkeletonModule { }\n","export const LOGIN : string = 'customers/login'"],"sourceRoot":"webpack:///"}