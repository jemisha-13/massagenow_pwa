{"version":3,"sources":["./src/app/design-component/custom-spinner/custom-spinner.component.ts","./src/app/design-component/custom-spinner/custom-spinner.component.html","./src/app/design-component/custom-spinner/customer-spinner.module.ts","./src/app/design-component/skeleton/skeleton.component.ts","./src/app/design-component/skeleton/skeleton.component.html","./src/app/design-component/skeleton/skeleton.module.ts","./src/app/shared-components/edit-profile/edit-profile.component.ts","./src/app/shared-components/edit-profile/edit-profile.component.html","./src/app/shared-components/loyalitypointlist/loyalitypointlist.component.ts","./src/app/shared-components/loyalitypointlist/loyalitypointlist.component.html","./src/app/shared-components/loyalitypointlist/loyalitypointlist.service.ts"],"names":[],"mappings":"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","file":"default~main-main-module~sidemenu-components-sidemenu-components-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-custom-spinner',\n  templateUrl: './custom-spinner.component.html',\n  styleUrls: ['./custom-spinner.component.scss']\n})\nexport class CustomSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinner-wrapper\">\n    <div class=\"inner-spinner\">\n        <img src =\"../../../assets/images/35.gif\">\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomSpinnerComponent } from '../custom-spinner/custom-spinner.component';\n \n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NgbModule\n  ],\n  exports : [\n  ],\n  providers:[]\n  \n})\nexport class CustomSpinnerModule { }\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-skeleton',\n  templateUrl: './skeleton.component.html',\n  styleUrls: ['./skeleton.component.scss']\n})\nexport class SkeletonComponent implements OnInit, OnChanges {\n\n  constructor() { }\n\n  @Input() skeletonData : any = '';\n  ngOnInit(): void {\n    // console.log('hello world',this.skeletonData);\n  }\n\n  ngOnChanges() {\n    // console.log('no data string value==>>>', this.skeletonData);\n  }\n}\n","        <div class=\"col-12 text-center\">\n            <div class=\"notAvailable-img\">\n                <img class=\"img-class\" src=\"../../../assets/images/no_image.png\">\n            </div>\n            <p>{{skeletonData}}</p>\n        </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SkeletonComponent } from './skeleton.component'\nimport { CustomSpinnerComponent } from '../custom-spinner/custom-spinner.component'\nimport { CustomSpinnerModule } from '../custom-spinner/customer-spinner.module'\nimport { SidemenuComponentsModule } from 'src/app/sidemenu-components/sidemenu-components.module';\n\n\n@NgModule({\n  declarations: [SkeletonComponent,CustomSpinnerComponent],\n  imports: [\n    CommonModule,\n    CustomSpinnerModule\n  ],\n  exports : [\n    SkeletonComponent,CustomSpinnerComponent\n  ]\n})\nexport class SkeletonModule { }\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ApiServicesService } from 'src/app/services/api-services.service';\nimport { SerachLocationComponent } from '../serach-location/serach-location.component';\ndeclare var $: any\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(\"video\")\n  public video!: ElementRef;\n\n  @ViewChild(\"canvas\")\n  public canvas!: ElementRef;\n\n  public captures: any;\n  closeResult: any = '';\n  editProfileForm!: FormGroup;\n  submitted: boolean = false;\n  id: any;\n  loginData: any = {};\n  clientId: any;\n  cameraOn: boolean=false;\n  image: any;\n  constructor(\n    public router: Router,\n    public NgbDialogService: NgbModal,\n    public service: ApiServicesService,\n    public route: Router\n  ) {\n    this.loginData = JSON.parse(localStorage.getItem('customerLogin')!)\n    console.log(this.loginData);\n    this.clientId = this.loginData.client;\n    this.id = this.loginData.result._id;\n    this.captures=[]\n    this.editProfileForm = new FormGroup({\n      'firstName': new FormControl('',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z][a-zA-Z\\\\s]+$')])),\n      'lastName': new FormControl('',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z][a-zA-Z\\\\s]+$')])),\n      'DOB': new FormControl(''),\n      'gender': new FormControl('',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z][a-zA-Z\\\\s]+$')])),\n      'phone': new FormControl('',Validators.compose([Validators.required, Validators.pattern('(([+][(]?[0-9]{1,3}[)]?)|([(]?[0-9]{4}[)]?))\\s*[)]?[-\\s\\.]?[(]?[0-9]{1,3}[)]?([-\\s\\.]?[0-9]{3})([-\\s\\.]?[0-9]{3,4})')])),\n      'email': new FormControl('',Validators.compose([Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')])),\n      'area': new FormControl('',Validators.required),\n      'street': new FormControl('',Validators.required),\n      'city': new FormControl('',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z][a-zA-Z\\\\s]+$')])),\n      'state': new FormControl('',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z][a-zA-Z\\\\s]+$')])),\n      'pinCode': new FormControl('',Validators.compose([Validators.required,Validators.pattern('^[1-9][0-9]{5}$')])),\n      'country': new FormControl('',Validators.compose([Validators.required,Validators.pattern('^[a-zA-Z][a-zA-Z\\\\s]+$')])),\n\n    })\n\n  }\n\n   ngAfterViewInit() {\n    \n  }\n\n  selectImage(content: any) {\n    this.NgbDialogService.open(content,{size:'sm', centered: true})\n    \n  }\n  cameraOpen(){\n    this.cameraOn=true;\n    \n    setTimeout(function(){\n      \n    },50000);\n    if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\n          this.video.nativeElement.srcObject = stream;\n          this.video.nativeElement.play();\n      });\n  }\n  }\n\n  \n\n\n  public capture() {\n      var context = this.canvas.nativeElement.getContext(\"2d\").drawImage(this.video.nativeElement, 0, 0, 640, 480);\n      this.captures.push(this.canvas.nativeElement.toDataURL(\"image/png\"));\n      console.log(this.captures);\n      this.image=this.captures[0]\n      console.log(this.image);\n      \n      \n      this.cameraOn=false;\n      // this.video.nativeElement.hide();\n  }\n\n  // back method\n  navigateBack() {\n    this.NgbDialogService.dismissAll();\n\n  }\n\n  // location map route\n  locationBox() {\n    const locationRef = this.NgbDialogService.open(SerachLocationComponent, {\n\n    })\n  }\n\n\n\n\n\n  ngOnInit(): void {\n    this.patchProfile();\n\n  }\n \n  // to patch data\n  patchProfile() {\n    this.editProfileForm.patchValue({\n      \"area\": this.loginData.result.address.area,\n      \"city\": this.loginData.result.address.city,\n      \"country\": this.loginData.result.address.country,\n      \"state\": this.loginData.result.address.state,\n      \"street\": this.loginData.result.address.street,\n      \"pinCode\": this.loginData.result.address.zip,\n      \"DOB\": this.loginData.result.dob,\n      \"email\": this.loginData.result.email,\n      \"firstName\": this.loginData.result.firstName,\n      \"gender\": this.loginData.result.gender,\n      \"geo_location\": {\n        \"coordinates\": [0.0, 0.0], \"type\": \"Point\"\n      },\n      \"image\": this.loginData.result.image,\n      \"lastName\": this.loginData.result.lastName,\n      \"phone\": this.loginData.result.mobile,\n    });\n    console.log(this.editProfileForm.value);\n\n  }\n\n\n  // convenience getter for easy access to form fields\n  get f() { return this.editProfileForm.controls; }\n\n  // to update api for edit profile\n  onSubmit() {\n    this.submitted = true;\n    console.log(this.editProfileForm.value);\n\n    // to stop if form is valid\n    if (this.editProfileForm.invalid) {\n      return;\n    }\n    else {\n      // api\n      let data = {\n        \"address\": {\n          \"area\": this.editProfileForm.value.area,\n          \"city\": this.editProfileForm.value.city,\n          \"country\": this.editProfileForm.value.country,\n          \"state\": this.editProfileForm.value.state,\n          \"street\": this.editProfileForm.value.street,\n          \"zip\": this.editProfileForm.value.pinCode,\n        },\n        \"dob\": this.editProfileForm.value.DOB,\n        \"email\": this.editProfileForm.value.email,\n        \"firstName\": this.editProfileForm.value.firstName,\n        \"gender\": this.editProfileForm.value.gender,\n        \"geo_location\": {\n          \"coordinates\": [0.0, 0.0], \"type\": \"Point\"\n        },\n        \"image\": this.image,\n        \"lastName\": this.editProfileForm.value.lastName,\n        \"mobile\": this.editProfileForm.value.phone,\n        \"notifyBy\": \"Email\"\n      }\n      console.log(data);\n\n\n      this.service.put(`customers?id=${this.id}&clientId=${this.clientId}`, data).subscribe((res: any) => {\n        console.log(res);\n        if (res.status == 200) {\n            this.NgbDialogService.dismissAll();\n\n        }\n\n      })\n    }\n\n  }\n\n}\n","<div class=\"myProfile \">\n    <div class=\"container\">\n        <div class=\"row \">\n            <div class=\"col-md-12 col-sm-12 col-xs-12 padd-0\">\n                <div class=\"profileForm\">\n                    <div class=\"mobileView\" >\n                        \n                            <i class=\"bi bi-arrow-left-short bi-icon-class backIcon\" (click)=\"navigateBack()\"></i>\n                           \n                            <img src=\"{{image ? image : '../../../assets/images/default_circle.svg'}}\"  (click)=\"selectImage(content)\" class=\"ml-3 profileImage capture\" alt=\"badge\" />\n                            <div id=\"app\" *ngIf=\"cameraOn==true\" >\n                                <div><video #video id=\"video\" style=\"width:324px\" autoplay></video></div>\n                                <div><button id=\"snap\" (click)=\"capture()\">Capture</button></div>\n                                <canvas #canvas id=\"canvas\" style=\"width: 50px;\n                                height: 50px\"></canvas>\n                                <!-- <ul>\n                                    <li *ngFor=\"let c of captures\">\n                                        <img src=\"{{ c }}\" height=\"50\" />\n                                    </li>\n                                </ul> -->\n                            </div>  \n                    </div>\n\n                   \n\n                    <form class=\"textBoxHide\" [formGroup]=\"editProfileForm\" (ngSubmit)=\"onSubmit()\">\n                        <div class=\"modal-div\">\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                <div class=\"passwordEdit fullText\" >\n                                    <div class=\"form-field\">\n                                        <label for=\"exampleInputPassword1\">First Name</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" placeholder=\"First Name\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                                        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                                            <div *ngIf=\"f.firstName.errors.pattern\">Please enter valid one.</div>\n                                        </div> \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                <div class=\"passwordEdit fullText\">\n                                    <div class=\"form-field\">\n                                        <label for=\"exampleInputPassword1\">Last Name</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"lastName\" placeholder=\"Last Name\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                                        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                                            <div *ngIf=\"f.lastName.errors.pattern\">Please enter valid one.</div>\n\n                                        </div> \n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label>Date Of Birth</label>\n                                    <input type=\"date\" class=\"form-control\" formControlName=\"DOB\" placeholder=\"Date Of Birth\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                                        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                                            <!-- <div *ngIf=\"f.lastName.errors.required\">DOB is required</div> -->\n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label>Gender</label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"gender\" placeholder=\"Gender\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.gender.errors }\" />\n                                        <div *ngIf=\"submitted && f.gender.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.gender.errors.required\">Gender is required</div>\n                                            <div *ngIf=\"f.gender.errors.pattern\">Please enter valid one.</div>\n                                            \n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label>Phone number</label>\n                                    <input type=\"tel\" class=\"form-control\" formControlName=\"phone\" placeholder=\"Phone\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\n                                        <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.phone.errors.required\">Phone Numaber is required</div>\n                                            <div *ngIf=\"f.phone.errors.pattern\">Please enter valid one.</div>\n\n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label>Email</label>\n                                    <input type=\"tel\" class=\"form-control\" formControlName=\"email\" placeholder=\"email\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                            <div *ngIf=\"f.email.errors.pattern\">Please enter valid one.</div>\n                                            \n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label>Address</label>\n                                    <i class=\"fa fa-plus-circle\" aria-hidden=\"true\" (click)=\"locationBox()\"></i>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            \n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label></label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"area\" placeholder=\"Address Line 1\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.area.errors }\" />\n                                        <div *ngIf=\"submitted && f.area.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.area.errors.required\">Address 1 is required</div>\n                                            <div *ngIf=\"f.area.errors.pattern\">Please enter valid one.</div>\n\n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label></label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"street\" placeholder=\"Address Line 2\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.street.errors }\" />\n                                        <div *ngIf=\"submitted && f.street.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.street.errors.required\">Address 2 is required</div>\n                                            <div *ngIf=\"f.street.errors.pattern\">Please enter valid one.</div>\n\n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label></label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"city\" placeholder=\"City/District\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" />\n                                        <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.city.errors.required\">City is required</div>\n                                            <div *ngIf=\"f.city.errors.pattern\">Please enter valid one.</div>\n\n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label></label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"state\" placeholder=\"State/Province\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.state.errors }\" />\n                                        <div *ngIf=\"submitted && f.state.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.state.errors.required\">State is required</div>\n                                            <div *ngIf=\"f.state.errors.pattern\">Please enter valid one.</div>\n\n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label></label>\n                                    <input type=\"tel\" class=\"form-control\" formControlName=\"pinCode\" placeholder=\"Postal Code\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.pinCode.errors }\" />\n                                        <div *ngIf=\"submitted && f.pinCode.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.pinCode.errors.required\">Pincode is required</div>\n                                            <div *ngIf=\"f.pinCode.errors.pattern\">Please enter valid one.</div>\n\n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"form-Inner d-flex align-items-center\">\n                                \n                                <div class=\"form-field\">\n                                    <label></label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"country\" placeholder=\"Country\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.country.errors }\" />\n                                        <div *ngIf=\"submitted && f.country.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.country.errors.required\">Country is required</div>\n                                            <div *ngIf=\"f.country.errors.pattern\">Please enter valid one.</div>\n\n                                        </div> \n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                        <div class=\"save\" style=\"text-align: center;\">\n                            <button type=\"submit\" class=\"saveButton\">Save</button>\n                        </div>\n                        <!-- <div class=\"mobileEditbtn\">\n                            <div class=\"editProfileForm\">\n                                <button class=\"btn btn-primary\" >Edit</button>\n                            </div>\n                        </div> -->\n                        \n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- <div class=\"mobileEditbtn\">\n        <div class=\"editProfileForm\">\n            <button class=\"btn btn-primary\" >Save</button>\n        </div>\n    </div> -->\n</div>\n\n<!-- modal for image -->\n  <ng-template #content let-modal>\n    <div class=\" text-center mt-3\" >\n      <h5 class=\" text-center\" >Book Us</h5>\n    </div>\n    <div class=\"text-center\" >\n     <p class=\"text-center\" >Pick Image</p>\n    </div>\n    <div class=\"modal-body\">\n        <button class=\"camera\">Gallery</button>\n    </div>\n    <div class=\"modal-body\">\n        <button class=\"cameraButton\" (click)=\"cameraOpen()\">Camera</button>\n    </div>\n  \n  </ng-template>","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { LoyalitypointlistService } from '../loyalitypointlist/loyalitypointlist.service';\n\n@Component({\n  selector: 'app-loyalitypointlist',\n  templateUrl: './loyalitypointlist.component.html',\n  styleUrls: ['./loyalitypointlist.component.scss']\n})\nexport class LoyalitypointlistComponent implements OnInit, AfterViewInit {\n  loyalityPointList:any=[]\n  have: any;\n\n  constructor(\n    private loyalitypointservice: LoyalitypointlistService,\n     private _router:Router,\n     private route:ActivatedRoute,\n     private ngbDialogueService:NgbModal\n    ) { }\n  @Input() data: any;\n\n    \n  ngOnInit(): void {\n    this.have=this.data.have\n\n  }\n\n  ngAfterViewInit(): void {\n    console.log(this.data.id, this.data.have)\n    let id=this.data.id\n    this.loyalitypointservice.loyalityPointList(id).subscribe((res:any) => {\n      this.loyalityPointList=res.result\n      console.log(res);\n    },err=>{console.log(err)});\n  }\n\n  //close model\n  moveLoyalityPage(){\n    this.ngbDialogueService.dismissAll();\n  }\n\n}\n","<div class=\"loyalityModal\">\n    <div class=\"awardImg\">\n        <i class=\"bi bi-arrow-left-circle-fill\" (click)=\"moveLoyalityPage()\"></i>\n    </div>\n    <div class=\"award-amount d-flex align-items-center justify-content-center\">\n        <img src=\"../../../assets/images/gift-card.svg\" alt=\"\" class=\"mr-2\" width=\"30\" />\n        <span>{{have}}</span>\n    </div>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 col-sm-6 col-xs-12\" *ngFor=\"let loyalityItem of loyalityPointList \">\n                <div class=\"loyalityCard-wrapper\">\n                    <div class=\"card-heading\">\n                        <h5 class=\"mb-0\">{{loyalityItem?.service}}</h5>\n                    </div>\n                    <div class=\"pointWrapper\">\n                        <div class=\"wid-80\">\n                            <p class=\"mb-0\">Points earned :</p>\n                        </div>\n                        <div class=\"wid-40\">\n                            <div class=\"point-value\">\n                                <img src=\"../../../assets/images/giftbox@2x.png\" alt=\"\">\n                                {{loyalityItem?.have}}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"pointWrapper\">\n                        <div class=\"wid-80\">\n                            <p class=\"mb-0\">Points redeemed :</p>\n                        </div>\n                        <div class=\"wid-40\">\n                            <div class=\"point-value\">\n                                <img src=\"../../../assets/images/openBox@2x.png\" alt=\"\">\n                                {{loyalityItem?.redeemed}}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"earnedDate\">\n                        <span>Earned on {{loyalityItem?.createdAt | date:'yyyy-MM-dd hh:mm a'}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ApiServicesService } from 'src/app/services/api-services.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoyalitypointlistService {\n\n  clientId=JSON.parse(localStorage.getItem('customerLogin')!)\n  constructor(private apiService : ApiServicesService) { }\n\n  loyalityPointList=(id:any)=>this.apiService.get(`customers/loyaltytransact?clientId=${this.clientId.client}&locationId=${id}`)\n  }\n \n\n"],"sourceRoot":"webpack:///"}